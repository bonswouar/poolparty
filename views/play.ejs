<%- include('header') -%>

<body>
  <div id="player-status" playing="false" current=""></div>
  <div id="container">
    <video id="video"
      width="640"
      poster="//shaka-player-demo.appspot.com/assets/poster.jpg"
      controls autoplay>
    </video>
  </div>
  <button id="next" onclick=nextSong();> Next </button>
</body>
<script src="/js/dash-utils.js"></script>
<script src="/js/shaka-player.compiled.js"></script>
<script>
  window.data = [];

  function nextSong() {
    if (window.data.length > 0) {
      window.socket.emit('delete');
      fetchHls(window.data.shift());
    }
  }

  function initShaka() {
    // Install built-in polyfills to patch browser incompatibilities.
    shaka.polyfill.installAll();

    // Check to see if the browser supports the basic APIs Shaka needs.
    if (shaka.Player.isBrowserSupported()) {
      // Everything looks good!
      if (window.data.length > 0) {
        fetchHls(window.data.shift());
      }
    } else {
      // This browser does not have the minimum set of APIs we need.
      console.error('Browser not supported!');
    }
  }

  document.addEventListener('DOMContentLoaded', initShaka);

  function fetchHls(url) {
    var video = document.getElementById('video')
    document.getElementById('player-status').setAttribute('current', url)

    fetch(`https://pipedapi.kavin.rocks/streams/${url}`)
    .then(res => res.json())
    .then(json => {
      hlsUrl = json['hls']
      var streams = [];
      streams.push(...json['audioStreams']);
      streams.push(...json['videoStreams']);

      // generate dash file from streams
      const dash = generate_dash_file_from_formats(streams, json['duration']);
      hlsUrl = "data:application/dash+xml;charset=utf-8;base64," + btoa(dash);

      const player = new shaka.Player(video);
      player.addEventListener('error', onError);
      video.addEventListener('playing',  () => {document.getElementById('player-status').setAttribute('playing', true)});
      video.addEventListener('pause', () => {document.getElementById('player-status').setAttribute('playing', false)});
      video.addEventListener('ended', () => {nextSong()});

      player.load(hlsUrl, 0, "application/dash+xml").then(() => {
        console.log('Video loaded successfully');
      }).catch((error) => {
        console.log('Error loading video:', error);
        document.getElementById('player-status').setAttribute('playing', false);
      });

      function onError(event) {
        document.getElementById('player-status').setAttribute('playing', false);
        console.error('Error code', event.detail.code, 'object', event.detail);
      }
    })
    .catch(err => {
      console.log(err)
      // throw err
    })
  }
</script>
<%- include('footer') -%>
